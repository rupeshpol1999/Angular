***********************Angular************************** 


**commands : 
	i.     npm install -g @angular/cli@latest
	ii.    ng v 
	iii.   ng new projname
	iv.   ng generate component compname
	v.    ng build

**Components :-
        - Components are the basic building blocks of angular application.
        - Whole Application is devided into logical small ui parts called Components.
        - Each Components Have 4 Files such has
 		i.    Html (Template)        : Used for View
 		ii.   Css(Style)             : used for Styling/desgine
 		iii.  ts (Component)         : used for Logic
 		iv.   spec.ts(Specification) : used for testing

        - Components are usefull for ui reusability and easy to maintain or debug
        - angular used command line interface to create, debug, test components. to this technique is called scaffolding

        ⦁ Create component command - ng generate component ComponentName
        ⦁ ng build


**service provider for deploying website on server
www.netlify.com
www.vercel.com


**Data binding : 

- it refers to the communication between component file (.ts) and template file (.html) within a component
- there are two kinds of data binding such as
	1) one way data binding 
	2) two way data binding 

1. one way data binding :
	- using these we can send data from template to component (or ) component to template file
	- there are three possible ways for one way data binding : 


        a) string interpolation :  
                - it is used to get the data from component file to template file as a string. 
                - it is represented with double braces
                            ex. 	//.html											//.ts
                        <p>The fruit is {{name}}</p>						public class componentname{name:string = "apple" }
                - but it always pass data as string, sometine we need to pass other sata such as Boolean. for that we can use property binding.

        b) property binding : 
                - it is also used to get the data from component file to template file as it is.
                - it is represented as square brackets
                <element   [property] = "variable">
                            ex.       //.html											//.ts

                        <img [src] = "url" [alt] = "title"/>						public class compname{ url = "path";  alt = "title";   }

        c) Event Binding :  
                - it is used to send the data from template to component file as an event. 
                - it is represented with paranthesis ()
                        <element (event) "functionname()">
                            ex. 	//.html											//.ts
                        <button (click) = "fun()">Click</button>				public class compname{ 	fun() { alert("Hello World") }          }


2) Two way data binding : 
        - angular can even make data transfer between component and template file at a time called two way data binding. 
        - to use two way data binding we can import a module name "formsmodule" which contains a directive "ngmodel"



<input type="number" placeholder="Enter first num" [(ngmodel)] = "num1">
<input type="number" placeholder="Enter second num" [(ngmodel)] = "num2">
<button (click)="add()">Convert</button>
<p>The Addition is {{value}}</p>


class app{
                num1:number = 0;
                num2:number = 0;
                value:number = 0;
                convert(){
                        this.value = this.num1 + this.num2
                }
        }




* Directives : 
        - directives in angular are used to manipulate or control the DOM() of element or control flow of element.
        - there are three types of directives such as
                1) structural directives 
                2) porperty directives
                3) custom directives
        1) structural directives:
                - these directives are used to control the flow of element. 
                - thats why they are also called control flow directives
                - there are three structural directives
                        i) ngIf (or) @if
                        ii) ngSwitch
                        iii) ngFor
                i) ngIf : 
                        - it is used to determine which element need to be presented based on a condition.
                        - in latest version of angular it is modified as "@if"
                ii) ngswitch  : 
                        -switch is used to select one of multiple otions
                        - it is an alternative of ifelse if.
                        - we can take multiple cases with expression will be executed and in acase of 
                          no matching to any case default case will be executed.

                          //old syntax
                                <div ngSwitch = "value">
                                <p *ngSwitchCase="Value1"> Content 1 </p>
                                <p *ngSwitchCase="Value2"> Content 2 </p>
                                <p *ngSwitchCase="Value3"> Content 3 </p>
                                <p *ngSwitchDefault> Content 5 </p>
                                </div>

                          //new syntax
                                @switch(value)
                                {
                                        @case(value1){ <p>Content 1 </p>   }
                                        @case(value2){ <p>Content 2 </p>   }
                                        @case(value3){ <p>Content 3 </p>   }
                                        @default{ <p>Content default </p>  }
                                }
                iii) @for or ngfor : 
                        - for is used to itterate an array of values.
                        - it is similar for of syntax.
                        - using these we can repeate certain elements again and again

                        //app.ts
                                let arr:string[] = ["Raju","Prasad","Shekhar"]

                        //old syntax
                                <p *ngfor = "let m of arr">{{m}}</p>

                        //new syntax
                                @for(m of arr;track m){
                                        <p>The Name Is {{m}} </p>
                                }

                        //index printing
                                @for(m of arr;let ind = $index; track m){
                                        <p>The Name Is {{m}} {{ind}} </p>


        2) Property Directives : these directives are also called attribute directives  which are used 
                                        the DOM of a element there are two property directive such as

                                        i) ngClass
                                        ii) ngStyle
                                i) ngClass : 
                                        - it is used to add or remove CSS class names of an element.
                                ii) ngStyle : 
                                        - it is used to add or remove inline style from an element.
        3) custom Directives : 
                - we can create our own directives which can be used to manipulate DOM of an element 
                - create directives in terminal "ng directive directivename"
                - it will create directivename.ts and spec.ts file.
                - to manipulate an element DOM, we need to use selector name inside directivename.ts to elements
                <element selector>content</element>

                we can select element with following code in directive.ts
                import{ElementRef} from '@angular/core';

                class directiveName(punlic ele:ElementRef){
                        this.ele.nativeElement.style.propertyName = "
                }

***** Pipes ***********

        pipesare used to tranform the data they use symbol pipe' | ' 
        there are two types of pipes such as 
                1) default pipes
                2) custom pipes
        1) default pipe  : 
                these pipe are used for different puposes and are provided by angular
                a) uppercase : we can use this to transform data into uppercase
                b) lowercase : we can use this to transform data into lowercase
                c) number/decimal pipe :  we can use this to round figure the decimal values
                        <p>{{value | number :'minIntegerDigits.minFractionDigits - maxFractionDigits'}}
                d) currency : we can use this pipe to transform the data into specific currency.
                              it will add currency symbol infront of valuer. by default currency symbol is $
                                <p>{{value | currency:'country code'}} 
                                ***for india country code is "INR"
                e) date pipe : we can use this to transform the dat into specific date format.
                        //.ts 
                        dt = new date()
                        //html
                        <p>{{dt | date : MM/dd/yy - hh:mm:ss}}</p>
                f) slice pipe : we can use this pipe to cut the string between specific indexces 
                        <p>{{value | slice:startIndex:endIndex}}</p>
                g) json pipe : we can use these pipe to convert object data to json data to print easily
                        <p>{{value | json}}</p>
        2) custom pipe : 
                        we can create any pipe using "ng generate pipe pipename" in cli.
                        it create pipename.ts file which contain


interview question
        1) what is angular? what is used of angular
        2) diff bet angular and react
        3) diff between angular and angular json
        4) angular architecture
                angular supports component driven architecture and recent version supports sandalone component
                and olden version uses components that are managed by modules. every component have template(html)
                and component(ts) file that are communicated using data binding. we can manipulate DOM of element 
                using directive and transform data in template using pipes. one component can share data to another 
                component through common point called service.

        5) diff between typescript and javascript ?
        6) what is component ? what is the use of components ?
        7) explain component creation and files in angular ? 
        8) what is data binding and explain one way and two way data binding ?
        9) what is directive ? explain structural directvies?
        10) explain property directive and how to create custom directive ?
        11) what are pipe and how to use pipes in angular ?
        12) what are pure and impure pipe?
             In angular, all defaults pipe are pure pipe. a pipe is called pure pipe 
                i) if it only depends on input value
                ii) pure pipes uses memoization(it remembers previous value based on input.
                     it calls pipe only if input changes)
             any pipe that doesn't follows this rules is called impure pipe.